# If not running interactively, don't do anything
[[ $- != *i* ]] && return
 
alias ls='ls --color=auto'
alias grep='grep --color'

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM=verbose
export GIT_PS1_DESCRIBE_STYLE=branch
export GIT_PS1_SHOWCOLORHINTS=1
export GIT_PS1_HIDE_IF_PWD_IGNORED=1

set_prompt () {
    Last_Command=$? # Must come first!
    Blue='\[\e[01;34m\]'
    White='\[\e[01;37m\]'
    Red='\[\e[01;31m\]'
    Green='\[\e[01;32m\]'
    Yellow='\[\e[01;33m\]'
    Purple='\[\e[01;35m\]'
    Cyan='\[\e[01;36m\]'
    Reset='\[\e[00m\]'
    FancyX='\342\234\227'
    Checkmark='\342\234\223'

    # ugly hack as __git_ps1 need to arg to think it is in prompt mode (and so add color
    PS1=""
    if [ -f /etc/bash_completion.d/git-prompt ]
    then
	__git_ps1 "" ""
    fi
    ps1_save=$PS1
    
    # Add a bright white exit status for the last command
    PS1="$White\$? "
    # If it was successful, print a green check mark. Otherwise, print
    # a red X.
    if [[ $Last_Command == 0 ]]; then
        PS1+="$Green$Checkmark "
    else
        PS1+="$Red$FancyX "
    fi
 
    PS1+="$Yellow\\d "
    PS1+="$Cyan\\t "
    PS1+="$Purple\\u@\\h "
 
    # If root, red. Otherwise, green.
    if [[ $EUID == 0 ]]; then
        PS1+="$Red"
    else
        PS1+="$Green"
    fi
    # Print the working directory 
    PS1+="\\w"
    
  #  PS1+="$White$(parse_git_branch)"   
  #  PS1+="$(__git_ps1)"

    PS1+="$Reset$ps1_save"
    
    # marker in blue, and resetthe text color to the default.
    PS1+="\n$Blue\\\$$Reset "
}
PROMPT_COMMAND='set_prompt'
